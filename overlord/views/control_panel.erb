<%
  disarming_button_state = can_be_disarmed? ? 0 : 1
  arming_button_state = can_be_armed? ? 0 : 1
  controlpanel_state = case
                        when can_be_armed? then "locked"
                        when can_be_disarmed? then "armed"
                        else "initial"
                       end
  initial_action = (controlpanel_state == 'initial') ? "/lock" : ''
%>
<script type="text/javascript">
  CONTROLPANEL = { 'state': '<%= controlpanel_state %>' };
</script>
<div id="controlPanel" class="outerBevel">
  <form id="controlPanelForm" name="control_panel_form" method="POST"
    action="<%= initial_action %>">
    <div id="activation-controls">
      <div id="activation-codes">
         <div id="armingControls" class="outerBevel codedControl foregroundSurface">
          <div id="armingCodeEntry" class="codeEntry">
            <h1 id="labelArmingCode" class="label">Arming code</h1>
            <div class="controlFrame">
              <input id="armingCodeInput" name="arming_code" type="text" value="<%= @arming_code %>"
              class="innerBevel codeEntry textDisplay"
              onfocus="codeEntryFocused(this)">
            </div>
          </div>
          <div id="armingCodeAction" class="controlFrame outerBevel codeActionOuter">
            <h1 id="labelArmingButton" class="label">Arm: use with caution</h1>
            <div id="armingButton" class="innerBevel foregroundSurface codeActionInner"
                disabled="<%= arming_button_state %>"
                classWhenLit="armingButtonBright"
                onmousedown="armingButton().buttonDown()"
                onmouseup="armingButton().buttonUp()"
                onclick="armingButtonPushed()">
                <p class="buttonLabel squareButton">ARMED</p>
            </div>
          </div>
        </div>
        <div id="disarmingControls" class="outerBevel codedControl foregroundSurface">
          <div id="disarmingCodeEntry" class="codeEntry">
            <h1 id="labelDisarmingCode" class="label">Disarming code</h1>
            <div class="controlFrame">
              <input id="disarmingCodeInput" name="disarming_code" type="text" value="<%= @disarming_code %>"
               class="innerBevel textDisplay"
               onfocus="codeEntryFocused(this)">
            </div>
          </div>
          <div id="disarmingCodeAction" class="controlFrame outerBevel codeActionOuter">
            <h1 id="labelDisarmingButton" class="label">Disarm</h1>
            <div id="disarmingButton" class="innerBevel foregroundSurface codeActionInner"
                disabled="<%= disarming_button_state %>"
                classWhenLit="disarmingButtonBright"
                onmousedown="disarmingButton().buttonDown()"
                onmouseup="disarmingButton().buttonUp()"
                onclick="disarmingButtonPushed()">
                <p class="buttonLabel squareButton">DISARMED</p>
            </div>
          </div>
        </div>
      </div>
      <div id="commitButtons" class="outerBevel foregroundSurface">
        <div id="commitControlFrame" class="controlFrame">
          <div id="commitControl" class="actionButton">
            <h1 id="labelCommit" class="label">Commit</h1>
            <input type="image" id="commitButton" class="button" src="redbutton.svg"
              imageWhenDark="redbutton.svg" imageWhenLit="redbutton-lit.svg"
              onmousedown="commitButton().buttonDown()"
              onmouseup="commitButton().buttonUp()">
          </div>
        </div>
        <div id="cancelControlFrame" class="controlFrame">
          <div id="cancelControl" class="actionButton">
            <h1 id="labelCancel" class="label">Cancel</h1>
            <input type="image" id="cancelButton" class="button" src="bluebutton.svg"
              formaction="/cancel"
              imageWhenDark="bluebutton.svg" imageWhenLit="bluebutton-lit.svg"
              onmousedown="cancelButton().buttonDown()"
              onmouseup="cancelButton().buttonUp()"
          </div>
        </div>
      </div>
    </div>
    <div id="timerControl" class="outerBevel">
      <div id="timerControlInner" class="foregroundSurface">
        <div id="timerControlBox" class="">
          <span class="label">DOWN</span>
          <img id="timerEntryDown" class="button" src="bluebutton.svg"
            imageWhenLit="bluebutton-lit.svg" imageWhenDark="bluebutton.svg"
            onclick="adjustDelayTime(-5)">
          <div id="timerEntryFrame" class="controlFrame innerBevel">
            <h1 id="timerLabel" class="label">Detonation timer (s)</h1>
            <input id="timerEntry" name="timer_value" type="text" class="innerBevel textDisplay"
              value="<%= bomb.delay_remaining %>"
              <%= can_be_armed? ? "" : "DISABLED" %>>
          </div>
          <img id="timerEntryUp" class="button" src="bluebutton.svg"
            imageWhenLit="bluebutton-lit.svg" imageWhenDark="bluebutton.svg"
            onclick="adjustDelayTime(5)">
          <span class="label">UP</span>
        </div>
      </div>
    </div>
  </form>
</div>
